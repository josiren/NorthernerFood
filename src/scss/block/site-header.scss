// Todo вот тут у тебя уже написан стандартный класс, почему бы не использовать его,
//  зачем ниже ты используешь просто header, давай унифицируем, базовый класс по бэм должен быть один
$b: '.site-header';

#{$b} {
  display: flex;
  align-items: center;
  height: 72px;
  padding: 0 108px;
  z-index: 3;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  justify-content: space-between;

  // Todo для адаптивов мы используем миксины из файлика _breakpoints.scss, сами медиа запросы не пишем
  @media (width > 1600px) {
    justify-content: center;
    gap: 40px;
  }

  .header__logo {
    width: 152px;
    height: 32px;
  }

  .header__buttons {
    @include center-flex();
    flex-grow: 1;
    max-width: 530px;
    height: 40px;
    justify-content: normal;
    gap: 16px;
    margin-left: 8px;
    position: relative;

    .catalog,
    .search {
      display: flex;
      align-items: center;
      flex-grow: 1;
      height: 100%;
      border-radius: 4px;

      &:first-child {
        max-width: 140px;
        padding: 4px;
        background-color: $bg-buttons-secondary;
        border-radius: 4px;
        transition: $g-transition;

        &:hover {
          box-shadow: $shadow-secondary;
        }

        .catalog__text {
          margin-left: 20px;
        }
      }

      &:last-child {
        padding: 8px 6px 8px 13px;
        gap: 10px;
        border: 1px solid $bg-buttons-secondary;

        .buttons-item__input {
          flex-grow: 1;
        }

        .buttons-item__img {
          width: 24px;
          height: 24px;
        }
      }

      .catalog__container {
        @include center-flex();
        height: 100%;
        width: 30px;
        cursor: pointer;
        flex-direction: column;

        .container__button,
        .container__button::after,
        .container__button::before {
          display: block;
          background-color: #fff;
          position: absolute;
          height: 2px;
          width: 19px;
          border-radius: 2px;
        }

        .container__button::before {
          content: '';
          margin-top: -5px;
        }

        .container__button::after {
          content: '';
          margin-top: 5px;
        }
      }

      .catalog__text {
        color: $text-secondary;
      }
    }
  }

  .header__navigation {
    display: flex;
    align-items: center;
    justify-content: normal;
    flex-grow: 1;
    gap: 24px;
    max-width: 203px;
    margin-left: 9px;

    .navigation__item {
      @include center-flex();
      flex-direction: column;
      gap: 8px;
      flex-grow: 1;
      max-width: 65px;
      position: relative;

      .item__img {
        width: 24px;
        height: 24px;
      }

      .item__text {
        font-size: 12px;
      }

      .basket__amount {
        border-radius: 4px;
        background-color: $bg-primary;
        position: absolute;
        font-weight: bold;
        color: $text-secondary;
        padding: 2px 4px;
        width: 11.28px;
        height: 11px;
        font-size: 6px;
        top: -3px;
        visibility: hidden;
        display: flex;
        justify-content: center;
        right: 13px;
      }
    }
  }

  .header_user-menu {
    display: flex;
    flex-grow: 1;
    padding: 8px;
    align-items: center;
    max-width: 209px;

    .user-menu__img {
      width: 40px;
      height: 40px;

      &:last-child {
        width: 13px;
        height: 7px;
        margin-left: 43.5px;
        cursor: pointer;
      }
    }

    .user-menu__text {
      margin-left: 10px;
    }
  }
}

.catalog__dropdown-menu {
  display: flex;
  position: absolute;
  margin-top: 67px;
  width: 100%;
  justify-content: center;
  padding: 40px 0;
  background-color: $bg-main;
  font-weight: bold;
  gap: 40px;
  z-index: 2;
  visibility: hidden;
  opacity: 0;
  transition: $g-transition;

  .dropdown-menu__item {
    max-width: 272px;
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    gap: 24px;
    visibility: hidden;

    .menu__item__text {
      cursor: pointer;
      transition: $g-transition;

      &:hover {
        color: $orange-true;
      }

      &.is-active {
        visibility: visible;
        opacity: 1;
      }
    }
  }

  &.is-active {
    visibility: visible;
    opacity: 1;
  }
}
